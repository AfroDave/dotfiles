set nocompatible
filetype off

" vim-plug
if filereadable(expand("~/.vimrc.bundles"))
    source ~/.vimrc.bundles
endif
"

" General
filetype plugin indent on

autocmd FileType txt setlocal omnifunc=complete
autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
autocmd FileType python setlocal omnifunc=pythoncomplete#Complete foldmethod=indent
autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags
autocmd FileType ruby setlocal omnifunc=rubycomplete#Complete
autocmd FileType haskell setlocal omnifunc=necoghc#omnifunc

syntax enable
set background=dark
set fileformats=unix,dos,mac
set mouse=a
set mousehide

set nomodeline
set nostartofline

set encoding=utf-8
setglobal fileencoding=utf-8
set fileencodings=utf-8
scriptencoding utf-8

nnoremap <Space> <NOP>
let mapleader=' '
let maplocalleader=' '
let g:mapleader=' '

if has('clipboard')
    if has('unnamedplus')
        set clipboard=unnamedplus
    else
        set clipboard=unnamed
    endif
endif

if has('conceal')
    set conceallevel=0
endif

set shortmess+=filmnrxoOtT
set viewoptions=folds,options,cursor,unix,slash
set virtualedit=block
set hidden

set backup
set backupdir=~/.vim/tmp/backup
set swapfile
set dir=~/.vim/tmp/swap
set undodir=~/.vim/tmp/undo
if has('persistent_undo')
    set undofile
endif

autocmd BufEnter * silent! lcd %:p:h

let g:gruvbox_italic=0
colorscheme gruvbox

set cursorline
set colorcolumn=81
set lazyredraw
set ttyfast
set ttymouse=xterm2

if has('cmdline_info')
    set ruler
    set rulerformat=%30(%=\:b%n%y%m%r%w\ %l,%c%V\ %P%)
    set showcmd
endif

if has('statusline')
    set laststatus=2
    set noshowmode
endif

set backspace=indent,eol,start
set showmatch
set matchpairs+=<:>
set hlsearch | nohlsearch
set incsearch
set ignorecase
set smartcase

set wildmode=longest,list:longest,list:full

set wildignore+=.hg,.git,.svn
set wildignore+=*.aux,*.out,*.toc
set wildignore+=*.jpg,*.bmp,*.gif,*.png,*.jpeg
set wildignore+=*.o,*.obj,*.exe,*.dll,*.manifest
set wildignore+=*.pyc,*.class,*.aux,*.odg,*.pdf
set wildignore+=*.spl
set wildignore+=*.swp
set wildignore+=*/tmp/*
set wildignore+=*.zip,*.tar*
set wildignore+=*.DS_Store
set wildignore+=*.luac
set wildignore+=migrations
set wildignore+=*.pyc
set wildignore+=*.orig
set wildignore+=classes
set wildignore+=lib

set completeopt=menu

set whichwrap=b,s,h,l,<,>,[,]
set scrolloff=5
set foldlevelstart=99
set foldmethod=syntax
set foldnestmax=3

set timeoutlen=400
set ttimeout
set ttimeoutlen=200

set autoread
set autochdir
set number

set spelllang=en_gb

set tags=./.tags,${HOME}/vim/tmp/tags
"

" Formatting
set linebreak
set autoindent
set cindent
set copyindent
set smartindent
set preserveindent
set expandtab
set softtabstop=4
set shiftwidth=4
set tabstop=4
set smarttab
set shiftround
set nojoinspaces
set splitright
set splitbelow
set synmaxcol=240

set list
set listchars=tab:›\ ,trail:·,extends:»,precedes:«,nbsp:×
"

" GUI
if has("gui_running")
    set guiheadroom=0
    set guioptions-=r
    set guioptions-=M
    set guioptions-=T
    set guioptions+=g
    set guioptions-=t
    set guioptions-=m
    set guioptions-=L
    set guioptions-=l
    set guioptions-=r
    set guioptions-=R
    set guifont=ttyp0\ 12
else
    set t_Co=256
    set t_ut=
    set noerrorbells
    set novisualbell
    let g:rehash256=1
    let &t_SI .= "\<Esc>[5 q"
    let &t_EI .= "\<Esc>[1 q"
endif
"

" Mapping
command! -bang -nargs=* -complete=file E e<bang> <args>
command! -bang -nargs=* -complete=file W w<bang> <args>
command! -bang -nargs=* -complete=file Wq wq<bang> <args>
command! -bang -nargs=* -complete=file WQ wq<bang> <args>
command! -bang Wa wa<bang>
command! -bang WA wa<bang>
command! -bang Q q<bang>
command! -bang QA qa<bang>
command! -bang Qa qa<bang>
map q: :q

cmap Tabe tab

nnoremap Y y$
vnoremap < <gv
vnoremap > >gv

noremap <Tab> :bn<CR>
noremap <S-Tab> :bp<CR>
nnoremap <Leader>bs :split<CR>
nnoremap <Leader>bv :vsp<CR>

nnoremap <silent> <Right> <C-W>l
nnoremap <silent> <Left> <C-W>h
nnoremap <silent> <Up> <C-W>k
nnoremap <silent> <Down> <C-W>j
nnoremap <silent> <Leader>l <C-W>l
nnoremap <silent> <Leader>h <C-W>h
nnoremap <silent> <Leader>k <C-W>k
nnoremap <silent> <Leader>j <C-W>j

nnoremap <silent> <Leader>sp :set spell!<CR>

nnoremap <Leader>sw :call StripTrailingWhitespace()<CR>
"

" Commands
function! StripTrailingWhitespace()
    normal mZ
    %s/\s\+$//e
    normal `Z
endfunction

function! ResCur()
    if line("'\"") <= line("$")
        normal! g`"
        return 1
    endif
endfunction

augroup resCur
    autocmd!
    autocmd BufWinEnter * call ResCur()
augroup end
"

" Plugins
if filereadable(expand("~/.vimrc.plugins"))
    source ~/.vimrc.plugins
endif
"
